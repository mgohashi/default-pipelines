def requiresDeployment = true
def requiresApproval = false
def requiresPromotion = true
def requiresDirectPromotion = false

pipeline {
  parameters {
    string(name: 'NAMESPACE', description: 'What is the project name?')
    string(name: 'APP_NAME', description: 'What is the application name?')
    string(name: 'GIT_URL', description: 'What is the Git repository?')
  }
  agent any
  stages {
    stage('Checkout') {
      steps {
        script {
          echo "Checkout source code from ${GIT_URL}..."
        }
      }
    }
    stage('Configurar Build') {
      steps {
        script {
          echo "NAMESPACE=${NAMESPACE}"
          echo "APP_NAME=${APP_NAME}"
        }
      }
    }
    stage('Build') {
      steps {
        script {
          echo "Application build..."
        }
      }
    }
    stage('Unit Tests') {
      steps {
        script {
          echo "Running unit tests..."
        }
      }
    }
    stage('Static Analysis') {
      steps {
        script {
          echo "Running analysis..."
        }
      }
    }
    stage('Export Nexus') {
      steps {
        script {
          echo "Exporting to nexus..."
        }
      }
    }
    stage('Deployment') {
      when {
        equals expected: true, actual: requiresDeployment
      }
      steps {
        script {
          echo "Executing deployment..."
        }
      }//steps
    }//stage
    stage('Aprovar') {
      agent none
      when {
        expression { return requiresDeployment && requiresApproval }
      }
      steps {
        script {
          def result = input(
              message: "Você gostaria de aprovar?",
              ok: "Sim, gostaria.",
              submitter: "aprovadores",
              submitterParameter: "USERNAME" 
          )
        }
      }
    }
    stage('Build Image') {
      when {
        equals expected: true, actual: requiresDeployment
      }
      steps {
        script {
          echo "Building image..."
        }
      }//steps
    }//stage
    stage('Promover') {
      agent none
      when {
        expression { return requiresDeployment && requiresPromotion && !requiresDirectPromotion }
      }
      
      steps {
        script {
          def result = input(
              message: "Você gostaria de promover?",
              ok: "Sim, gostaria.",
              submitter: "deployers",
              submitterParameter: "USERNAME"
          )
        }
      }
    }//stage
    stage('Promoting Image') {
      when {
        equals expected: true, actual: requiresPromotion
      }
      steps {
        script {
          echo "Promoting image..."
        }
      }//steps
    }//stage
    stage('Finalizando') {
      steps {
        script {
          echo "Finalizing..."
        }
      }
    }
  }//stages
}//pipeline